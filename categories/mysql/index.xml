<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on /dev/ser</title>
    <link>https://devser.com.br/categories/mysql/</link>
    <description>Recent content in MySQL on /dev/ser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Tue, 26 May 2020 15:49:55 -0300</lastBuildDate><atom:link href="https://devser.com.br/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Streaming MySQL changes to MongoDB with go-mysql</title>
      <link>https://devser.com.br/posts/streaming-mysql-changes-to-mongodb-using-go-mysql/</link>
      <pubDate>Tue, 26 May 2020 15:49:55 -0300</pubDate>
      
      <guid>https://devser.com.br/posts/streaming-mysql-changes-to-mongodb-using-go-mysql/</guid>
      <description>I&amp;rsquo;ve setup a proof-of-concept environment with docker-compose, for streaming MySQL data changes into a MongoDB collection.
It&amp;rsquo;s based on the great go-mysql library.
You can check out the project code in here: https://github.com/rpagliuca/stream-mysql-to-mongodb-with-go
Also, here is a videocast of the project up and running:   </description>
    </item>
    
    <item>
      <title>Deixe seu MySQL muito mais rápido rodando na memória RAM</title>
      <link>https://devser.com.br/posts/deixe-seu-mysql-muito-mais-rapido-rodando-na-memoria-ram/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://devser.com.br/posts/deixe-seu-mysql-muito-mais-rapido-rodando-na-memoria-ram/</guid>
      <description>Muitas vezes, o gargalo de uma importação de banco, ou execução de queries SQL é o tempo de escrita e leitura no disco rígido. Sabendo disso, uma maneira bacana de deixar o MySQL rapidão é deixar o banco inteiro armazenado na memória RAM, para nunca precisarmos acessar o disco rígido.
Claro que esse armazenamento é volátil, portanto é recomendado apenas para ambiente de desenvolvimento, onde muitas vezes um script ou importação de dump é executado múltiplas vezes por dia, tomando preciosos minutos do desenvolvedor.</description>
    </item>
    
  </channel>
</rss>
